{
    "openapi": "3.0.0",
    "info": {
        "title": "Trakli API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Local server"
        },
        {
            "url": "https://api.dev.trakli.app/api/v1",
            "description": "Development server"
        },
        {
            "url": "{protocol}://{host}/api/v1",
            "description": "Dynamic server URL",
            "variables": {
                "protocol": {
                    "enum": [
                        "http",
                        "https"
                    ],
                    "default": "https"
                },
                "host": {
                    "enum": [
                        "api.dev.trakli.app",
                        "api.staging.trakli.app"
                    ],
                    "default": "api.dev.trakli.app"
                }
            }
        }
    ],
    "paths": {
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "List all categories",
                "operationId": "c27321a68b19607a6a072dd9002ae37e",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of the category (income or expense)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncedSinceParam"
                    },
                    {
                        "$ref": "#/components/parameters/noClientIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_sync": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "operationId": "d33322a954bf87d41863b999cd03741c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "name"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string",
                                        "format": "string",
                                        "example": "245cb3df-df3a-428b-a908-e5f74b8d58a3:245cb3df-df3a-428b-a908-e5f74b8d58a4"
                                    },
                                    "type": {
                                        "description": "Type of the category",
                                        "type": "string",
                                        "enum": [
                                            "income",
                                            "expense"
                                        ]
                                    },
                                    "name": {
                                        "description": "Name of the category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the category",
                                        "type": "string"
                                    },
                                    "icon": {
                                        "description": "The icon of the category (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a specific category",
                "operationId": "61a71bfaaf4769be14a5c2f6c16f280c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a specific category",
                "operationId": "ce943d529a546d35c3e2d835c44b84bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Name of the category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the category",
                                        "type": "string"
                                    },
                                    "icon": {
                                        "description": "The icon of the category (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a specific category",
                "operationId": "781e51577249dadbecb542f20c66a360",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "400": {
                        "description": "Invalid category type"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "List all groups",
                "operationId": "daa5413644106e29d00c095c57c8bb63",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncedSinceParam"
                    },
                    {
                        "$ref": "#/components/parameters/noClientIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_sync": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Group"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Create a new group",
                "operationId": "2f883461ea0b54bbd3bc8ee6ff62b5ae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string",
                                        "format": "string",
                                        "example": "245cb3df-df3a-428b-a908-e5f74b8d58a3:245cb3df-df3a-428b-a908-e5f74b8d58a4"
                                    },
                                    "name": {
                                        "description": "Name of the group",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the group",
                                        "type": "string"
                                    },
                                    "icon": {
                                        "description": "The icon of the group (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get a specific group",
                "operationId": "e8c1b737c877f14027afc0cbb81b481f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Update a specific group",
                "operationId": "3eae5ee9e1993174f61588ab9096ba8c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string",
                                        "format": "string",
                                        "example": "245cb3df-df3a-428b-a908-e5f74b8d58a3:245cb3df-df3a-428b-a908-e5f74b8d58a4"
                                    },
                                    "name": {
                                        "description": "Name of the group",
                                        "type": "string"
                                    },
                                    "icon": {
                                        "description": "The icon of the group (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Delete a specific group",
                "operationId": "45fd7e245dd7430689d3eaa57e2b02a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Group deleted successfully"
                    },
                    "404": {
                        "description": "Group not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/import": {
            "post": {
                "tags": [
                    "Import"
                ],
                "summary": "Import financial records into Trakli",
                "operationId": "e61ecf7d684317bfd34159130cbca6bc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "File to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileImport"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/imports/{id}/failed": {
            "get": {
                "tags": [
                    "Import"
                ],
                "summary": "Get records that could not be imported for an import instance",
                "operationId": "df475189b455661167f7e7c01e00afd1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the import instance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FailedImport"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/imports": {
            "get": {
                "tags": [
                    "Import"
                ],
                "summary": "Get all scheduled imports",
                "operationId": "62c70ab8d3763df2f5e2ff066ecf95a7",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FileImport"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/imports/{id}/fix": {
            "put": {
                "tags": [
                    "Import"
                ],
                "summary": "Fix records that failed to import",
                "operationId": "7fee593b680617f807bb359d192ad1d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the import instance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "amount",
                                    "type",
                                    "date"
                                ],
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FailedImport"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response"
                    },
                    "206": {
                        "description": "Some imports could not be fixed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FailedImport"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/parties": {
            "get": {
                "tags": [
                    "Party"
                ],
                "summary": "List all parties",
                "operationId": "fc4d9004084d5830ee271a716f7e1b47",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncedSinceParam"
                    },
                    {
                        "$ref": "#/components/parameters/noClientIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_sync": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Party"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Party"
                ],
                "summary": "Create a new party",
                "operationId": "3d8bb107a2247bad1340e58a85382842",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string",
                                        "format": "string",
                                        "example": "245cb3df-df3a-428b-a908-e5f74b8d58a3:245cb3df-df3a-428b-a908-e5f74b8d58a4"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "individual,organization,business,partnership,non_profit,government_agency,educational_institution,healthcare_provider"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Incomes from John Doe"
                                    },
                                    "icon": {
                                        "description": "The icon of the party (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Party created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Party"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input|Party already exists"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/parties/{id}": {
            "get": {
                "tags": [
                    "Party"
                ],
                "summary": "Get a specific party",
                "operationId": "8b1cf22756993b628f213884aa66c766",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Party"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Party not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Party"
                ],
                "summary": "Update a specific party",
                "operationId": "28f2dc81853db9555ed20af6906cefa0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "individual,organization,business,partnership,non_profit,government_agency,educational_institution,healthcare_provider"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "income from John Doe"
                                    },
                                    "icon": {
                                        "description": "The icon of the party (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Party updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Party"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Party not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Party"
                ],
                "summary": "Delete a specific party",
                "operationId": "94f345744a74961f7013402cdd57261c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Party deleted successfully"
                    },
                    "404": {
                        "description": "Party not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "List all transactions",
                "operationId": "657d9bd3d8fbfc5ab8e07f76c6108ff6",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of transaction (income/expense)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncedSinceParam"
                    },
                    {
                        "$ref": "#/components/parameters/noClientIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_sync": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid transaction type"
                    }
                }
            },
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create a new transaction",
                "operationId": "9a3ef33300de46117a4e7c14bab88ffb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "type"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string",
                                        "format": "string",
                                        "example": "245cb3df-df3a-428b-a908-e5f74b8d58a3:245cb3df-df3a-428b-a908-e5f74b8d58a4"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "income",
                                            "expense"
                                        ]
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "datetime": {
                                        "type": "string",
                                        "format": "datetime"
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "party_id": {
                                        "type": "integer"
                                    },
                                    "wallet_id": {
                                        "type": "integer"
                                    },
                                    "group_id": {
                                        "type": "integer"
                                    },
                                    "is_recurring": {
                                        "description": "Set the transaction as a recurring transaction",
                                        "type": "boolean"
                                    },
                                    "recurrence_period": {
                                        "description": "Set how often the transaction should repeat",
                                        "type": "string"
                                    },
                                    "recurrence_interval": {
                                        "description": "Set how often the transaction should repeat",
                                        "type": "integer"
                                    },
                                    "recurrence_ends_at": {
                                        "description": "When the transaction stops repeating",
                                        "type": "date-time"
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "description": "Category ID array",
                                            "type": "integer"
                                        }
                                    },
                                    "files": {
                                        "description": "Files to attach to this transaction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/transactions/{id}/files": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Add file to a transaction",
                "operationId": "c4819a10dcfa436a030128ac45465ae2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "files",
                                    "type"
                                ],
                                "properties": {
                                    "files": {
                                        "description": "Files to attach to this transaction",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/transactions/{id}/files/{file_id}": {
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Removes a file from a transaction",
                "operationId": "b6e7c03ce9a463af5439dd65a5ae28d8",
                "responses": {
                    "201": {
                        "description": "Transaction deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get a specific transaction",
                "operationId": "9318cdb8487ba541e1ccc5228be6a2a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the transaction",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of transaction (income/expense)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "400": {
                        "description": "Invalid transaction type"
                    }
                }
            },
            "put": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Update a specific transaction",
                "operationId": "f9f38749bca7ec8f8c5eb9a3ced5c45e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the transaction",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of transaction (income/expense)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "income",
                                "expense"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "updated_at"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "income",
                                            "expense"
                                        ]
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "party_id": {
                                        "type": "integer"
                                    },
                                    "group_id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "wallet_id": {
                                        "type": "integer"
                                    },
                                    "is_recurring": {
                                        "description": "Set the transaction as a recurring transaction",
                                        "type": "boolean"
                                    },
                                    "recurrence_period": {
                                        "description": "Set how often the transaction should repeat",
                                        "type": "string"
                                    },
                                    "recurrence_interval": {
                                        "description": "Set how often the transaction should repeat",
                                        "type": "integer"
                                    },
                                    "recurrence_ends_at": {
                                        "description": "When the transaction stops repeating",
                                        "type": "date-time"
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "description": "Category ID array",
                                            "type": "integer"
                                        }
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Delete a specific transaction",
                "operationId": "fbd42f3c2f84d2b4558863d0706b819f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the transaction",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                }
            }
        },
        "/transfer": {
            "post": {
                "tags": [
                    "Transfers"
                ],
                "summary": "Create a new transfer",
                "operationId": "a7cdbf4848fdf9943c328b52373e3a48",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "type"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string",
                                        "format": "string",
                                        "example": "245cb3df-df3a-428b-a908-e5f74b8d58a3:245cb3df-df3a-428b-a908-e5f74b8d58a4"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "from_wallet_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "to_wallet_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exchange_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 9.23
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transfer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transfer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "List all wallets",
                "operationId": "205aac6c13391b324341f371573a6650",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncedSinceParam"
                    },
                    {
                        "$ref": "#/components/parameters/noClientIdParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_sync": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Wallet"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Create a new wallet",
                "operationId": "08891505e22e770a4a722fd84e9e60d7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type",
                                    "currency"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string",
                                        "format": "string",
                                        "example": "245cb3df-df3a-428b-a908-e5f74b8d58a3:245cb3df-df3a-428b-a908-e5f74b8d58a4"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Personal Cash"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "cash"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Personal cash wallet"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "pattern": "^[A-Z]{3}$",
                                        "example": "XAF"
                                    },
                                    "balance": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 12
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "icon": {
                                        "description": "The icon of the wallet (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Wallet created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/wallets/{id}": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Get a specific wallet",
                "operationId": "2f10046077e0d411b96969ddb46ef801",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wallet not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Update a specific wallet",
                "operationId": "8415e94044dedc6ffdfc45c6fbb37816",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "client_id": {
                                        "description": "Unique identifier for your local client",
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Wallet"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "bank"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated wallet description"
                                    },
                                    "icon": {
                                        "description": "The icon of the wallet (file or icon string)",
                                        "type": "string"
                                    },
                                    "icon_type": {
                                        "description": "The type of the icon (icon or emoji or  image)",
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Wallet updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wallet not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Delete a specific wallet",
                "operationId": "3f5000361bb9b5f04d24e0b0049be5e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet deleted successfully"
                    },
                    "404": {
                        "description": "Wallet not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "49bb9739139edd65051205fe4de62a23",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "first_name",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": []
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "5498d418bd27b89f6121622fb00eec6e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": []
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "operationId": "a24c4bfaa2713e03e04d3ce1b9a745a0",
                "responses": {
                    "200": {
                        "description": "User successfully logged out"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/oauth/{driver}/login": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get Oauth redirect URI",
                "operationId": "360160f39d8122bd949891b7e637b873",
                "responses": {
                    "200": {
                        "description": "URL generated"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/oauth/{driver}/callback": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Handles Oauth login callback",
                "operationId": "14c6f36da3d444f70e3c0423bb84cfd1",
                "responses": {
                    "200": {
                        "description": " "
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/send-verification-code": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send verification code to email or phone",
                "operationId": "15fb0586c6ee12a7f204c9b90bb455ea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact",
                                    "type"
                                ],
                                "properties": {
                                    "contact": {
                                        "description": "Email address or phone number",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of contact",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "phone"
                                        ]
                                    },
                                    "purpose": {
                                        "description": "Purpose of verification (optional, defaults to \"registration\")",
                                        "type": "string",
                                        "enum": [
                                            "registration",
                                            "login"
                                        ],
                                        "example": "registration"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "429": {
                        "description": "Too many requests"
                    }
                },
                "security": []
            }
        },
        "/verify-code": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify a code for email or phone",
                "operationId": "12daf8badabf51ec4d4781481fcfdadc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contact",
                                    "code",
                                    "type"
                                ],
                                "properties": {
                                    "contact": {
                                        "description": "Email address or phone number",
                                        "type": "string"
                                    },
                                    "code": {
                                        "description": "Verification code",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of contact",
                                        "type": "string",
                                        "enum": [
                                            "email",
                                            "phone"
                                        ]
                                    },
                                    "purpose": {
                                        "description": "Purpose of verification (optional, defaults to \"registration\")",
                                        "type": "string",
                                        "enum": [
                                            "registration",
                                            "login"
                                        ],
                                        "example": "registration"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code verified successfully"
                    },
                    "400": {
                        "description": "Invalid or expired code"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": []
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "properties": {
                    "id": {
                        "description": "ID of the category",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the category",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the category (income or expense)",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Category icon",
                        "properties": {
                            "id": {
                                "description": "ID of the icon",
                                "type": "integer"
                            },
                            "path": {
                                "description": "Image of the icon",
                                "type": "string"
                            },
                            "type": {
                                "description": "type of icon( image or icon or emoji)",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "sync_state": {
                        "description": "Sync state",
                        "properties": {
                            "id": {
                                "description": "ID of the sync state",
                                "type": "integer"
                            },
                            "syncable_id": {
                                "description": "ID of the syncable",
                                "type": "integer"
                            },
                            "client_generated_id": {
                                "description": "ID from the client",
                                "type": "integer"
                            },
                            "syncable_type": {
                                "description": "Syncable type",
                                "type": "string"
                            },
                            "source": {
                                "description": "",
                                "type": "string"
                            },
                            "last_synced_at": {
                                "description": "Date last synced",
                                "type": "string",
                                "format": "date-time"
                            },
                            "created_at": {
                                "description": "Date created",
                                "type": "string",
                                "format": "date-time"
                            },
                            "deleted_at": {
                                "description": "Date deleted",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "FailedImport": {
                "properties": {
                    "id": {
                        "description": "ID of the failed import",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "The amount of the transaction",
                        "type": "number",
                        "format": "float"
                    },
                    "type": {
                        "description": "The type of the transaction",
                        "type": "string"
                    },
                    "party": {
                        "description": "The party of the transaction",
                        "type": "string"
                    },
                    "wallet": {
                        "description": "The wallet of the transaction",
                        "type": "string"
                    },
                    "category": {
                        "description": "The category of the transaction",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the transaction",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date of the transaction",
                        "type": "string",
                        "format": "date"
                    },
                    "reason": {
                        "description": "The reason why the transaction failed",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "File": {
                "properties": {
                    "id": {
                        "description": "ID of the file",
                        "type": "integer"
                    },
                    "path": {
                        "description": "Path or content of the file",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of file (image, icon, emoji, pdf)",
                        "type": "string",
                        "enum": [
                            "image",
                            "pdf",
                            "icon",
                            "emoji"
                        ]
                    },
                    "model": {
                        "description": "Related model name",
                        "type": "string"
                    },
                    "model_id": {
                        "description": "ID of the related model",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "FileImport": {
                "properties": {
                    "id": {
                        "description": "ID of the file import",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the file to import",
                        "type": "string"
                    },
                    "file_type": {
                        "description": "Type of the file to import",
                        "type": "string"
                    },
                    "progress": {
                        "description": "Current import progress",
                        "type": "integer"
                    },
                    "num_rows": {
                        "description": "Total number of records to import",
                        "type": "integer"
                    },
                    "failed_imports_count": {
                        "description": "Total number of failed imports",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Group": {
                "properties": {
                    "id": {
                        "description": "ID of the group",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the group",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the group",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Category icon",
                        "properties": {
                            "id": {
                                "description": "ID of the icon",
                                "type": "integer"
                            },
                            "path": {
                                "description": "Image of the icon",
                                "type": "string"
                            },
                            "type": {
                                "description": "type of icon( image or icon or emoji)",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "sync_state": {
                        "description": "Sync state",
                        "properties": {
                            "id": {
                                "description": "ID of the sync state",
                                "type": "integer"
                            },
                            "syncable_id": {
                                "description": "ID of the syncable",
                                "type": "integer"
                            },
                            "client_generated_id": {
                                "description": "ID from the client",
                                "type": "integer"
                            },
                            "syncable_type": {
                                "description": "Syncable type",
                                "type": "string"
                            },
                            "source": {
                                "description": "",
                                "type": "string"
                            },
                            "last_synced_at": {
                                "description": "Date last synced",
                                "type": "string",
                                "format": "date-time"
                            },
                            "created_at": {
                                "description": "Date created",
                                "type": "string",
                                "format": "date-time"
                            },
                            "deleted_at": {
                                "description": "Date deleted",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Party": {
                "properties": {
                    "id": {
                        "description": "ID of the party",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Type of the party",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the party",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the party",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Party icon",
                        "properties": {
                            "id": {
                                "description": "ID of the icon",
                                "type": "integer"
                            },
                            "path": {
                                "description": "Image of the icon",
                                "type": "string"
                            },
                            "type": {
                                "description": "type of icon( image or icon or emoji)",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RecurringTransactionRule": {
                "properties": {
                    "id": {
                        "description": "ID of the transaction",
                        "type": "integer"
                    },
                    "transaction_id": {
                        "description": "ID of the transaction",
                        "type": "integer"
                    },
                    "recurrence_period": {
                        "description": "Set how often the transaction should repeat",
                        "type": "string"
                    },
                    "recurrence_interval": {
                        "description": "Set how often the transaction should repeat",
                        "type": "integer"
                    },
                    "recurrence_ends_at": {
                        "description": "When the transaction stops repeating",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "required": [
                    "amount",
                    "type"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the transaction",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Type of the transaction (income or expense)",
                        "type": "string",
                        "enum": [
                            "income",
                            "expense"
                        ]
                    },
                    "amount": {
                        "description": "Amount of the transaction",
                        "type": "number",
                        "format": "float"
                    },
                    "description": {
                        "description": "Description of the transaction",
                        "type": "string"
                    },
                    "datetime": {
                        "description": "Date and time of the transaction",
                        "type": "string",
                        "format": "date"
                    },
                    "categories": {
                        "description": "List of categories of the transaction",
                        "type": "array",
                        "items": {
                            "description": "Category ID array",
                            "type": "integer"
                        }
                    },
                    "is_recurring": {
                        "description": "Set the transaction as a recurring transaction",
                        "type": "boolean"
                    },
                    "user_id": {
                        "description": "ID of the user who created the transaction",
                        "type": "integer"
                    },
                    "transfer_id": {
                        "description": "ID of the associated transfer, if any",
                        "type": "integer"
                    },
                    "wallet_client_generated_id": {
                        "description": "Client-generated ID of the associated wallet",
                        "type": "string",
                        "format": "uuid"
                    },
                    "party_client_generated_id": {
                        "description": "Client-generated ID of the associated party",
                        "type": "string",
                        "format": "uuid"
                    },
                    "files": {
                        "description": "Files attached to the transaction",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "recurring_rules": {
                        "$ref": "#/components/schemas/RecurringTransactionRule"
                    }
                },
                "type": "object"
            },
            "Transfer": {
                "required": [
                    "amount",
                    "from_wallet_id",
                    "to_wallet_id",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the transfer",
                        "type": "integer"
                    },
                    "amount": {
                        "description": "Amount of the transaction",
                        "type": "number",
                        "format": "float"
                    },
                    "from_wallet_id": {
                        "description": "Source wallet",
                        "type": "integer"
                    },
                    "to_wallet_id": {
                        "description": "Destination wallet",
                        "type": "integer"
                    },
                    "exchange_rate": {
                        "description": "The exchange rate",
                        "type": "number",
                        "format": "float"
                    },
                    "user_id": {
                        "description": "ID of the user",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Wallet": {
                "properties": {
                    "id": {
                        "description": "ID of the wallet",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the wallet",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the wallet (bank, cash, credit_card, mobile)",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the wallet",
                        "type": "string"
                    },
                    "currency": {
                        "description": "Currency of the wallet",
                        "type": "string"
                    },
                    "balance": {
                        "description": "Balance of the wallet",
                        "type": "number",
                        "format": "float"
                    },
                    "icon": {
                        "description": "Wallet icon",
                        "properties": {
                            "id": {
                                "description": "ID of the icon",
                                "type": "integer"
                            },
                            "path": {
                                "description": "Image of the icon",
                                "type": "string"
                            },
                            "type": {
                                "description": "type of icon( image or icon or emoji)",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "stats": {
                        "properties": {
                            "total_income": {
                                "type": "number",
                                "format": "float"
                            },
                            "total_expense": {
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "limitParam": {
                "name": "limit",
                "in": "query",
                "description": "Number of items to return per page",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 20
                }
            },
            "syncedSinceParam": {
                "name": "synced_since",
                "in": "query",
                "description": "Get recent changes after this date",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "noClientIdParam": {
                "name": "no_client_id",
                "in": "query",
                "description": "Get results with no client id",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Bearer token authentication",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Category",
            "description": "Endpoints for managing transaction categories"
        },
        {
            "name": "Transactions",
            "description": "Endpoints for managing transactions"
        },
        {
            "name": "Transfers",
            "description": "Endpoints for managing transfers"
        },
        {
            "name": "Authentication",
            "description": "Endpoints for user authentication"
        },
        {
            "name": "Groups",
            "description": "Groups"
        },
        {
            "name": "Import",
            "description": "Import"
        },
        {
            "name": "Party",
            "description": "Party"
        },
        {
            "name": "Wallet",
            "description": "Wallet"
        }
    ]
}